Notes:
	Differences between unique_ptr and raw pointer implementations:
		unique_ptr:
			1. Deletion of allocated memory not necessary
			2. Allocation of memory is slightly different
					std::unique_ptr<T[]> newMemoryBlock = std::make_unique<T[]>(newCapacity)
						instead of
					T* newMemoryBlock = new T(newCapacity);
			3. Assignment to std::unique_ptr requires the std::move() function
					_memoryBlock = std::move(newMemoryBlock);
						instead of
					_memoryBlock = newMemoryBlock;	

container:
	vector (both raw pointers and unique pointer implementations):
		completed:
			contiguous memory storage
			dynamic memory allocation
			constructor
			destructor
			operator[]
			operator=
			operator==
			assign	
			at
			front
			back
			data
			begin
			cbegin
			rbegin
			crbegin
			end
			cend
			rend
			crend
			empty
			size
			max_size
			capacity
			reserve
			shrink_to_fit
			clear
			insert
			erase
			erase_if				
			push_back
			pop_back
			resize
			swap
		in-progress:
			
		paused:
			
		not started:
			emplace_back
			append_range
			insert_range
			assign_range
			emplace



	
